name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Build project
        run: ./gradlew build

      - name: Install standard-version
        run: npm install -g standard-version

      - name: Generate release notes
        run: standard-version --skip.commit --skip.tag

      - name: Get workflow run number
        id: workflow_run_number
        run: echo "::set-output name=run_number::${{ github.run_number }}"


      - name: Create tag
        id: create_tag
        run: echo "TAG=v${{ steps.workflow_run_number.outputs.run_number }}" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NEWRELIC_BUILD_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Set release body
        run: echo "See the attached changelog for release details." > release_body.txt

      - name: Update release
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.NEWRELIC_BUILD_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('release_body.txt', 'utf8');
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create_release.outputs.release_id }}
            });

      - name: Save release notes to file
        run: echo "${{ steps.create_release.outputs.body }}" > CHANGELOG.md

      - name: Publish release notes as asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NEWRELIC_BUILD_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/plain
