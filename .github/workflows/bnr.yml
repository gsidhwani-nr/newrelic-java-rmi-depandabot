name: Build and Release

on:
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - manual-release

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      
      - name: Set Extensions Dir
        id: set_ext_dir
        run: |
          echo "Setting Extensions Dir..."
          echo "NEW_RELIC_EXTENSIONS_DIR=/tmp" >> $GITHUB_ENV
        
      - name: Build with Gradle
        run: ./gradlew build install

      - name: Set Tag
        id: set_tag
        run: echo "::set-output name=tag::v${{ github.run_number }}"
        
      - name: Create Archive
        run: |
          mkdir /tmp/release
          zip -r /tmp/release/release_${{ steps.set_tag.outputs.tag }}.zip /tmp/*.jar

      - name: Generate Changelog
        id: generate_changelog
        run: |
          echo "Generating changelog..."
          previous_tag=$(git describe --abbrev=0 --tags HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)
          changelog=$(git log --pretty=format:"- %s (%h)" $previous_tag..HEAD)
          echo "::set-output name=changelog::$changelog"

      - name: Create Release
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.NEWRELIC_BUILD_TOKEN }}
          script: |
            try {
                var changelog = `Release Changelog:\n\n${{ steps.generate_changelog.outputs.changelog }}`;
                var tag = '' + `${{ steps.set_tag.outputs.tag }}`;
                const archivePath = '/tmp/release/release_${{ steps.set_tag.outputs.tag }}.zip';
                var response = await github.rest.repos.createRelease({
                  draft:false,
                  generate_release_notes:true,
                  name:tag,
                  owner:context.repo.owner,
                  prerelease:false,
                  repo:context.repo.repo,
                  tag_name:tag,
                  body:changelog
                });

                core.exportVariable('RELEASE_ID', response.data.id);
                core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
              } catch (error) {
                core.setFailed(error.message);
              }
      - name: Upload Release Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NEWRELIC_BUILD_TOKEN }}
        with:
          asset_path: /tmp/release/release_${{ steps.set_tag.outputs.tag }}.zip
          asset_name: elease_${{ steps.set_tag.outputs.tag }}.zip
          upload_url: ${{ env.RELEASE_UPLOAD_URL }} 
          asset_content_type: application/zip
        
